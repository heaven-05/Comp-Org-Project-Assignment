# text output for different functions

.data 										

    prompt: .asciiz "\nEnter a positive number greater than or equal to 25: "	#console text for prompt, when the user runs program
    illegal:  .asciiz "Illegal Number!"						#console text for if input is invalid
    legal: .asciiz "This number is legal!"					#console text for if input is valid
    fibResults:  .asciiz "\nThe fibonacci sequence of this number is: "		#console text for fibonacci sequence calculation

# functions

.text
.globl main
    main:
        # loop to see if input is legal (greater than/equal to 25)

        while:
            li $v0, 4                	 # sys call 4 -> register v0 
            la $a0, prompt           	 # prompt address -> register a0
            syscall                 	 # print prompt

            li $v0, 5                	 # sys call 5 -> register v0 
            syscall                	     # read input

            move $t2, $v0            	 # move v0 -> t2
            blt $t2, 25, illegal_input   # if input less than 25, it's illegal
	

	    #if input is legal
	
        valid:
	    li $v0, 4                 # sys call 4 -> register v0
            la $a0, valid             # legal address -> register a0
	    la $a0, legal	      # legal console text -> register a0
            syscall                   # print text for legal number
        
# exit main

        exit:
           
            li $v0, 4                 # sys call 4 -> register v0
            la $a0, fibResults        # fib seq text -> register a0
            syscall                   # print fib seq text


	    move $a0, $t2             # move v0 -> a0

 	    jal fibonacci             # jump and link to fibonacci function
            move $a0, $v0	      # move a0 -> v0
            li $v0, 1		      # sys call 1 -> register v0
            syscall		      # perform system call
	    
